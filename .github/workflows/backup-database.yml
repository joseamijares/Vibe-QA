name: Database Backup

on:
  schedule:
    # Run daily at 3 AM UTC
    - cron: '0 3 * * *'
  workflow_dispatch:

jobs:
  backup-database:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Set environment variables
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
          echo "BACKUP_BUCKET=${{ secrets.BACKUP_BUCKET }}" >> $GITHUB_ENV

      - name: Create backup
        run: |
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          BACKUP_NAME="backup_${TIMESTAMP}.sql"
          
          echo "Creating backup: $BACKUP_NAME"
          
          # Extract connection details from DATABASE_URL
          # This is a simplified example - in production, use proper URL parsing
          pg_dump "$DATABASE_URL" > "$BACKUP_NAME"
          
          # Compress the backup
          gzip "$BACKUP_NAME"
          
          echo "backup_file=${BACKUP_NAME}.gz" >> $GITHUB_ENV
          echo "backup_size=$(ls -lh ${BACKUP_NAME}.gz | awk '{print $5}')" >> $GITHUB_ENV

      - name: Upload to storage
        run: |
          # This would upload to your backup storage solution
          # For example, using AWS S3:
          # aws s3 cp "${{ env.backup_file }}" "s3://${{ env.BACKUP_BUCKET }}/"
          
          echo "### Backup Complete" >> $GITHUB_STEP_SUMMARY
          echo "- File: ${{ env.backup_file }}" >> $GITHUB_STEP_SUMMARY
          echo "- Size: ${{ env.backup_size }}" >> $GITHUB_STEP_SUMMARY
          echo "- Timestamp: $(date)" >> $GITHUB_STEP_SUMMARY

      - name: Cleanup old backups
        run: |
          # Implement retention policy (e.g., keep last 30 days)
          echo "Retention policy: Keep backups for 30 days"

      - name: Verify backup
        run: |
          # Basic verification that backup was created successfully
          if [ -f "${{ env.backup_file }}" ]; then
            echo "✅ Backup file created successfully"
          else
            echo "❌ Backup file not found"
            exit 1
          fi