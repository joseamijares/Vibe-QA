name: TypeScript Type Generation & Validation

on:
  push:
    branches:
      - main
      - Dev
    paths:
      - 'supabase/migrations/*.sql'
      - 'src/**/*.ts'
      - 'src/**/*.tsx'
  pull_request:
    paths:
      - 'supabase/migrations/*.sql'
      - 'src/**/*.ts'
      - 'src/**/*.tsx'
  schedule:
    # Run daily to catch any drift
    - cron: '0 9 * * *'
  workflow_dispatch:

env:
  SUPABASE_VERSION: 1.142.2

jobs:
  generate-types:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: ${{ env.SUPABASE_VERSION }}

      - name: Generate TypeScript types from database
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
        run: |
          supabase link --project-ref $SUPABASE_PROJECT_ID
          supabase gen types typescript --linked > src/types/database.generated.ts

      - name: Check for type changes
        id: check-changes
        run: |
          if git diff --quiet src/types/database.generated.ts; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "✅ Database types are up to date" >> $GITHUB_STEP_SUMMARY
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "⚠️ Database types have changed" >> $GITHUB_STEP_SUMMARY
            echo '```diff' >> $GITHUB_STEP_SUMMARY
            git diff src/types/database.generated.ts | head -100 >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi

      - name: Create PR with type updates
        if: steps.check-changes.outputs.changed == 'true' && github.event_name == 'schedule'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update database types'
          title: 'Update Database Types'
          body: |
            This PR updates the TypeScript types based on the latest database schema.
            
            Generated by the scheduled type-check workflow.
          branch: update-database-types
          delete-branch: true

  validate-types:
    runs-on: ubuntu-latest
    needs: generate-types
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript compiler
        run: npm run typecheck

      - name: Validate Supabase client usage
        run: |
          echo "Checking for proper Supabase client usage..."
          
          # Check for any direct SQL queries that should use generated types
          if grep -r "supabase.rpc\|supabase.from" src/ --include="*.ts" --include="*.tsx" | grep -v "database.generated"; then
            echo "⚠️ Found Supabase queries that might not be using generated types"
          fi

      - name: Check for type assertions
        run: |
          # Find potentially unsafe type assertions
          echo "Checking for unsafe type assertions..."
          if grep -r "as any\|as unknown" src/ --include="*.ts" --include="*.tsx"; then
            echo "⚠️ Found potentially unsafe type assertions" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ No unsafe type assertions found" >> $GITHUB_STEP_SUMMARY
          fi

  type-coverage:
    runs-on: ubuntu-latest
    needs: validate-types
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm install -D type-coverage

      - name: Check type coverage
        run: |
          npx type-coverage --detail --strict | tee coverage.txt
          
          # Extract coverage percentage
          COVERAGE=$(grep "Type coverage" coverage.txt | grep -oE "[0-9]+\.[0-9]+")
          
          echo "### Type Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "Coverage: ${COVERAGE}%" >> $GITHUB_STEP_SUMMARY
          
          # Fail if coverage is below threshold
          if (( $(echo "$COVERAGE < 90" | bc -l) )); then
            echo "❌ Type coverage is below 90% threshold" >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "✅ Type coverage meets threshold" >> $GITHUB_STEP_SUMMARY
          fi

  validate-api-types:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate API endpoint types
        run: |
          echo "Validating API endpoint types..."
          
          # Check that all API routes have proper type definitions
          for file in src/app/api/**/*.ts; do
            if [ -f "$file" ]; then
              if ! grep -q "NextRequest\|NextResponse" "$file"; then
                echo "Warning: $file might be missing proper Next.js API types"
              fi
            fi
          done

      - name: Check Zod schemas match database types
        run: |
          echo "Checking Zod schemas..."
          
          # This is a placeholder for more sophisticated validation
          # In a real implementation, you'd compare Zod schemas with generated types
          if ls src/**/*schema*.ts 2>/dev/null; then
            echo "Found Zod schemas to validate"
          fi